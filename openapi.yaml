openapi: 3.0.0
info:
  title: Dernier Metro API
<<<<<<< HEAD
  version: "1.0.0"
  description: >
    API pédagogique qui simule la prochaine rame et indique si c'est la dernière.
    Horaires simulés : 05:30 → 01:15 (fuseau horaire : Europe/Paris).
servers:
  - url: http://localhost:3000
    description: Serveur local

paths:
  /health:
    get:
      summary: Vérification du service
      responses:
        '200':
          description: Service disponible
=======
  version: '1.0'
  description: API pédagogique qui simule la prochaine rame et indique si c'est la dernière.
servers:
  - url: http://localhost:3000
    description: Local
paths:
  /health:
    get:
      summary: Status
      responses:
        '200':
          description: OK
>>>>>>> 1dcf19b80fd042b48251d4416155c633c87f7aa8
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
<<<<<<< HEAD

  /next-metro:
    get:
      summary: Prochains passages à une station
      parameters:
        - in: query
          name: station
          required: true
          schema:
            type: string
          description: "Nom de la station (ex: Chatelet). Obligatoire."
        - in: query
          name: line
          required: false
          schema:
            type: string
          description: "Ligne de métro (par défaut : M1)."
        - in: query
          name: headwayMin
          required: false
          schema:
            type: integer
          description: >
            Fréquence en minutes entre deux rames (par défaut : 3 ou via la variable d'environnement HEADWAY_MIN).
            Doit être un entier positif.
        - in: query
          name: n
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 5
          description: "Nombre de prochains passages à retourner (entre 1 et 5, par défaut : 1)."

      responses:
        '200':
          description: Prochaine(s) rame(s) ou service fermé
=======
  /next-metro:
    get:
      summary: Prochaine rame pour une station
      parameters:
        - in: query
          name: station
          schema:
            type: string
          required: true
          description: Nom de la station (ex: Chatelet)
        - in: query
          name: line
          schema:
            type: string
          required: false
          description: Ligne (par défaut M1)
        - in: query
          name: headwayMin
          schema:
            type: integer
          required: false
          description: Fréquence en minutes (par défaut 3)
      responses:
        '200':
          description: Prochaine rame ou service fermé
>>>>>>> 1dcf19b80fd042b48251d4416155c633c87f7aa8
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
<<<<<<< HEAD
                      station:
                        type: string
                        example: "Chatelet"
                      line:
                        type: string
                        example: "M1"
                      headwayMin:
                        type: integer
                        example: 3
                      nextArrivals:
                        type: array
                        items:
                          type: string
                          example: "00:58"
                      isLast:
                        type: boolean
                        example: false
                      tz:
                        type: string
                        example: "Europe/Paris"
                  - type: object
                    properties:
                      station:
                        type: string
                        example: "Chatelet"
                      line:
                        type: string
                        example: "M1"
                      service:
                        type: string
                        example: "closed"
                      tz:
                        type: string
                        example: "Europe/Paris"

        '400':
          description: Paramètre manquant ou invalide
=======
                      station: { type: string }
                      line: { type: string }
                      headwayMin: { type: integer }
                      nextArrival: { type: string, example: '00:58' }
                      isLast: { type: boolean }
                      tz: { type: string, example: 'Europe/Paris' }
                  - type: object
                    properties:
                      station: { type: string }
                      line: { type: string }
                      service: { type: string, example: 'closed' }
                      tz: { type: string }
        '400':
          description: Paramètre manquant
>>>>>>> 1dcf19b80fd042b48251d4416155c633c87f7aa8
          content:
            application/json:
              schema:
                type: object
                properties:
<<<<<<< HEAD
                  error:
                    type: string
                    example: "missing station"

        '404':
          description: Station inconnue
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unknown station"
                  suggestions:
                    type: array
                    items:
                      type: string
                    example: ["Chatelet", "Gare de Lyon"]
=======
                  error: { type: string, example: 'missing station' }
>>>>>>> 1dcf19b80fd042b48251d4416155c633c87f7aa8
